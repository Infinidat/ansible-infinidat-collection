---
# PSDEV-1108: Create playbook automating cluster configuration mobility.
# Create three volumes: vol_nonwriteable, vol_explicitly_writable and vol_writable.
- hosts: localhost
  gather_facts: true  # Required for ansible_date_time
  collections:
    - infinidat.infinibox
  vars:
    - dataset_default_provisioning: THIN
    - use_base2_units: true
    - table_export_limit: 3000
    - admin_user_name: admin
    - admin_user_password: 123456
    - admin_user_email: dev.mgmt@infinidat.com
    - pool_admin_user_name: Commvault
    - pool_admin_user_password: 123456
    - pool_admin_user_email: dohlemacher@infinidat.com
    - ldap_name: PSUS_ANSIBLE_ad
    - setup_alerting_emails: [ "dohlemacher@infinidat.com" ]
    - prod_alerting_emails: [ "dohlemacher@infinidat.com" ]
    - alerting_event_levels: [ "INFO", "WARNING", "ERROR", "CRITICAL" ]
    - alerting_includes: []
    - alerting_excludes: [ "EVENT_FLOOD", "USER_LOGIN_SUCCESS", "USER_LOGGED_OUT" ]
    - syslogs: # A list of syslog dictionaries
        - target_name: syslog1_target
          rule_name: syslog1
          protocol: SYSLOG
          host: 172.31.88.158
          port: 514
          facility: LOCAL7
          transport: UDP
          post_test: True # Not a real test if using UDP
        - target_name: syslog2_target
          rule_name: syslog2
          protocol: SYSLOG
          host: 172.31.88.158
          port: 515
          facility: LOCAL7
          transport: UDP
          post_test: True
        - target_name: graylog_target
          rule_name: graylog
          protocol: SYSLOG
          host: 172.31.77.214
          port: 1514
          facility: LOCAL7
          transport: UDP
          post_test: True
  tasks:
    - name: Create temporary setup email notification rule setup_email for addresses {{ setup_alerting_emails }}
      infini_notification_rule:
        name: "setup_email"
        event_level: "{{ alerting_event_levels }}"
        include_events: "{{ alerting_includes }}"
        exclude_events: "{{ alerting_excludes }}"
        recipients: "{{ setup_alerting_emails }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Temporarily remove production email notification rule for {{ prod_alerting_emails }}
      infini_notification_rule:
        name: "production_email"
        state: "absent"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Enable compression
      infini_config:
        config_group: "mgmt"
        key: "pool.compression_enabled_default"
        value: true
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Set capacity units
      infini_metadata:
        object_type: "system"
        key: "ui-dataset-base2-units"
        value: "{{ use_base2_units }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Set dataset default provisioning to {{ dataset_default_provisioning }}
      infini_metadata:
        object_type: "system"
        key: "ui-dataset-default-provisioning"
        value: "{{ dataset_default_provisioning }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Configure Infinibox - Set maximum export rows to {{ table_export_limit }}
      infini_metadata:
        object_type: "system"
        key: "ui-table-export-limit"
        value: "{{ table_export_limit }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Configure Infinibox - Setup Active Directory
      infini_users_repository:
        name: "{{ ldap_name }}"
        bind_password: "tuFrAxahuYe4"
        bind_username: "conldap"
        ad_domain_name: "infinidat.com"
        repository_type: "ActiveDirectory"
        schema_group_class: "group"
        schema_group_memberof_attribute: "memberof"
        schema_group_name_attribute: "cn"
        schema_groups_basedn: ""
        schema_user_class: "user"
        schema_username_attribute: "sAMAccountName"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Test user login using Active Directory credentials
      infini_user:
        user_name: "admin"  # Must be an AD account, not local
        user_password: "123456"
        state: "login"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Configure 'CO-ReadOnly' LDAP user group
      infini_user:
        user_ldap_group_name: "CO-ReadOnly"
        user_ldap_group_dn: "CN=Infinidat,OU=Security Groups,OU=Groups,OU=Corp,DC=infinidat,DC=com"
        user_ldap_group_ldap: "{{ ldap_name }}"
        user_ldap_group_role: "read_only"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    # - name: Configure 'CO-StorageAdmin' LDAP user group
    #   infini_user:
    #     user_ldap_group_name: "CO-StorageAdmin"
    #     user_ldap_group_dn: "CN=Infinidat,OU=Security Groups,OU=Groups,OU=Corp,DC=infinidat,DC=com"
    #     user_ldap_group_ldap: "{{ ldap_name }}"
    #     user_ldap_group_role: "admin"
    #     state: "present"
    #     user: "{{ user }}"
    #     password: "{{ password }}"
    #     system: "{{ system }}"

    # - name: Configure 'ETS-CommVault' LDAP user group
    #   infini_user:
    #     user_ldap_group_name: "ETS-CommVault"
    #     user_ldap_group_dn: "CN=Infinidat,OU=Security Groups,OU=Groups,OU=Corp,DC=infinidat,DC=com"
    #     user_ldap_group_ldap: "{{ ldap_name }}"
    #     user_ldap_group_role: "pool_admin"
    #     user_group_pools: [ "pool-a", "pool-b", "pool-c" ]
    #     state: "present"
    #     user: "{{ user }}"
    #     password: "{{ password }}"
    #     system: "{{ system }}"

#
#    - name: TODO by David - Test Infinibox - Test LDAP
#      ansible.builtin.debug:
#        msg: (4) Test LDAP
#
#    - name: TODO by David - Test Infinibox - Test LDAP roles
#      ansible.builtin.debug:
#        msg: (4) Test LDAP roles
#
    - name: Set up an admin user
      infini_user:
        user_name: "{{ admin_user_name }}"
        user_email: "{{ admin_user_email }}"
        user_password: "{{ admin_user_password }}"
        user_role: "admin"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"


#    - name: TODO by Wei - Configure Infinibox - Temporarily setup alerting email
#      # Ref: http://{{ibox2}}/api/rest/notification/targets
#      ansible.builtin.debug:
#        msg: (6) Create event rule to send email to TEO-Engineering-Alerts@jackhenry.com
#
#    - name: TODO by Wei - Test Infinibox - Test temporarily  alerting
#      ansible.builtin.debug:
#        msg: (6) Create test event
#
#    - name: TODO by Wei - Configure Infinibox - Define syslog from list
#      # Ref: http://{{ibox2}}/api/rest/notification/targets
#      ansible.builtin.debug:
#        msg: (7) Configure syslogs

    - name: Remove existing syslog notification rules
      # Required since the target cannot be modified if there is a rule that uses the target
      infini_notification_rule:
        name: "{{ item.rule_name }}"
        state: "absent"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"
      loop:
        "{{ syslogs }}"

    - name: Create syslog notification targets
      infini_notification_target:
        state: "present"
        name: "{{ item.target_name }}"
        protocol: "{{ item.protocol }}"
        host: "{{ item.host }}"
        port: "{{ item.port }}"
        facility: "{{ item.facility }}"
        transport: "{{ item.transport }}"
        post_test: "{{ item.post_test }}" # Force a dummy event for notification to be posted
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"
      loop:
        "{{ syslogs }}"

    - name: Create syslog notification rules
      infini_notification_rule:
        name: "{{ item.rule_name }}"
        target: "{{ item.target_name }}"
        event_level: "{{ alerting_event_levels }}"
        include_events: "{{ alerting_includes }}"
        exclude_events: "{{ alerting_excludes }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"
      loop:
        "{{ syslogs }}"
#
#    - name: TODO by Wei - Configure Infinibox - Create syslogs
#      ansible.builtin.debug:
#        msg: (7) Create syslogs
#
#    - name: Done - Configure Infinibox - Create network space
#      infini_network_space:
#        msg: (8) Create network space

    - name: Remove replication network space named Replication
      infini_network_space:
        name: Replication
        state: absent
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Create replication network space named Replication
      infini_network_space:
        name: Replication
        state: present
        interfaces:
          - 80
          - 81
          - 82
        service: RMR_SERVICE
        netmask: 16
        network: 172.20.0.0
        default_gateway: 172.20.95.254
        # rate_limit: 8
        # mtu: 1280
        ips: # IPs borrowed from https://labs.infinidat.com/gdc/systems/psus-vbox-aws44-1/ip/
          - 172.20.50.111
          - 172.20.50.70
          - 172.20.49.243
          - 172.20.49.241
          - 172.20.49.239
          - 172.20.49.237
          - 172.20.49.235
          - 172.20.49.233
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

#
#    - name: TODO by David - Configure Infinimentrics - Add Infinibox
#      ansible.builtin.debug:
#        msg: (9) Add Infinibox to Infinimetrics
#
    - name: Create pools
      infini_pool:
        name: "{{ item }}"
        size: 10GB
        vsize: 10GB
        state: present
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"
      loop:
        - pool-a
        - pool-b
        - pool-c

    - name: Set up pool admin user {{ pool_admin_user_name }} for pool pool-a
      infini_user:
        user_name: "{{ pool_admin_user_name }}"
        user_email: "{{ pool_admin_user_email }}"
        user_password: "{{ pool_admin_user_password }}"
        user_role: "pool_admin"
        user_pool: "pool-a"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"



#
#
#
#
#
#
#    - name: Configure Infinibox - Label fibre channel switches
#      # Ref: http://{{ibox2}}/api/rest/fc/switches/{ID}
#      ansible.builtin.debug:
#        msg: (11) Rename fibre channel switches using names listed in file 
#
#    - name: Test Infinibox - Test labels fibre channel switches
#      ansible.builtin.debug:
#        msg: (11) Test renamed fibre channel switches. Validate WWN in BNA
#
#    # Ensure that JHA CA Certificate is installed by remote support 
#    - name: Configure Infinibox - Update management SSL certificate
#      # Ref: https://wiki.infinidat.com/display/TWDRAFTS/.Config+System+SSL+Certificate+commands+vPUBLISHED
#      # Ref: http://{{ibox2}}/api/rest/system/certificates
#      ansible.builtin.debug:
#        msg: (12) Update management SSL certificate
#
#    - name: Configure Infinibox - Update SA SSL certificate
#      ansible.builtin.debug:
#        msg: (12) Update SA SSL certificate
#
#    - name: Configure Infinibox - Setup alerting production email
#      ansible.builtin.debug:
#        msg: (13) Create event rule to send email to Alerts-CorpSystemsStorage@jackhenry.com

    - name: Create production email notification rule production_email for addresses {{ prod_alerting_emails }}
      infini_notification_rule:
        name: "production_email"
        event_level: "{{ alerting_event_levels }}"
        include_events: "{{ alerting_includes }}"
        exclude_events: "{{ alerting_excludes }}"
        recipients: "{{ prod_alerting_emails }}"
        state: "present"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Configure Infinibox - Post event that Infinibox {{ system }} configuration is completed by user {{ user }}
      infini_event:
        description_template: Infinibox {{ system }} configuration is complete
        level: INFO
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"

    - name: Remove temporary setup email notification rule for {{ setup_alerting_emails }}
      infini_notification_rule:
        name: "setup_email"
        state: "absent"
        user: "{{ user }}"
        password: "{{ password }}"
        system: "{{ system }}"
